// Example: 02_hello_world
// This example demonstrates how to create a PDF with text using standard fonts.
package main

import (
	"fmt"
	"os"

	"github.com/ryomak/gopdf"
)

func main() {
	// 新規PDFドキュメントを作成
	doc := gopdf.New()

	// A4サイズの縦向きページを追加
	page := doc.AddPage(gopdf.A4, gopdf.Portrait)

	// フォントを設定（Helvetica, サイズ24）
	page.SetFont(gopdf.Helvetica, 24)

	// タイトルを描画
	page.DrawText("Hello, World!", 100, 750)

	// フォントを変更（Times-Roman, サイズ14）
	page.SetFont(gopdf.TimesRoman, 14)

	// サブテキストを描画
	page.DrawText("This is a PDF generated by gopdf library.", 100, 720)
	page.DrawText("Pure Go implementation with no external dependencies.", 100, 700)

	// フォントを変更（Courier, サイズ12）
	page.SetFont(gopdf.Courier, 12)

	// コード風のテキストを描画
	page.DrawText("package main", 100, 660)
	page.DrawText("", 100, 645)
	page.DrawText("import \"github.com/ryomak/gopdf\"", 100, 630)

	// 異なるフォントで複数行を描画
	page.SetFont(gopdf.HelveticaBold, 16)
	page.DrawText("Features:", 100, 580)

	page.SetFont(gopdf.Helvetica, 12)
	page.DrawText("- Pure Go implementation", 120, 560)
	page.DrawText("- Standard Type1 fonts support", 120, 545)
	page.DrawText("- Simple and intuitive API", 120, 530)
	page.DrawText("- PDF 1.7 compliance", 120, 515)

	// ページの下部に小さいテキストを描画
	page.SetFont(gopdf.HelveticaOblique, 10)
	page.DrawText("Generated with gopdf - https://github.com/ryomak/gopdf", 100, 50)

	// ファイルに出力
	file, err := os.Create("output.pdf")
	if err != nil {
		fmt.Fprintf(os.Stderr, "Error creating file: %v\n", err)
		os.Exit(1)
	}
	defer file.Close()

	if err := doc.WriteTo(file); err != nil {
		fmt.Fprintf(os.Stderr, "Error writing PDF: %v\n", err)
		os.Exit(1)
	}

	fmt.Println("PDF created successfully: output.pdf")
	fmt.Println("Open the file to see the 'Hello, World!' text with multiple fonts!")
}
